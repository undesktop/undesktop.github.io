{"name":"Undesktop","tagline":"Desktop sans environment","body":"## Mission\r\nThe Undesktop Project exists to decouple desktop applications from the desktop environment.  We\r\nwork towards this by developing high-quality, modern desktop applications which work on their own.\r\n\r\n## Technology\r\nWe understand that making a truly great application requires the best technology.  For this reason,\r\nwe have compiled a shortlist of preferred technologies.  Other technology may be used when\r\nrequired.\r\n\r\n* Vala -- as deep as possible\r\n* C -- never C++, ever\r\n* CMake -- to compile everything\r\n* GTK3 -- for anything with a GUI\r\n* Clutter -- minimized to avoid problems in software rendered environments\r\n* GObject -- vala makes this easy\r\n\r\n## License\r\nAll Undesktop Project code is licensed under the BSD 3-clause license.  All designs and graphics\r\nare released to the public domain under the terms of the Creative Commons Public Domain (CC0)\r\nDedication.\r\n\r\nWe encourage you to fork our projects if you don't like where we're going, but please do talk to us\r\nfirst: we'd like to address your complaints internally first.  However, if you do fork permanently,\r\nwe ask that you change the name and logos (to comply with possible trademarks and with the third\r\nclause of the license)\r\n\r\n## Code Standards\r\n* Follow the division of model/view/controller.  The view should emit signals which the controller\r\n  then listens to and calls methods on the model.\r\n* Use GResources to compile in things like your `.ui` files, which don't need to be changed by the\r\n  end user or by packagers.\r\n* Indent with tabs, align with spaces.  For explanation of my reasoning, see [Lea Verou's post on\r\n  the topic](http://lea.verou.me/2012/01/why-tabs-are-clearly-superior/).  She was 100% spot-on.\r\n* Don't write a manpage in groff, seriously.  Nobody fucking knows groff.  Use pandoc markdown\r\n  instead: we have a CMake task which compiles pandoc into groff for manpages.\r\n* Don't play favorites with backends.  If there's like 4 backends (like for network or audio),\r\n  don't just pick one and use it.  Provide an interface which the backend classes can implement.\r\n* Handle your errors as locally as possible, don't let them bubble far.\r\n* Mark your nullable types in Vala, we use `--enable-experimental-non-null`.  Follow this even when\r\n  you have to disable that flag to use code which doesn't mark nullable types.\r\n* Test your code.  It doesn't have to be perfect, but at least try to get good coverage.\r\n* We use TravisCI\r\n\r\n## The Future\r\nSince we're building on GTK3 and Clutter, we're ready for Wayland and the incoming push to hardware.\r\n\r\nEmpahsis on systemd stuff","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}